name: Build Smartdns rules files
on:
  schedule:
    - cron: "0 20 * * *"
env:
  PUSH_TO_RELEASE: false
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "^1.14"

      - name: Set $GOPATH and more variables
        run: |
          echo "RELEASE_NAME=Released on $(date -d "8 hour" -u +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date -d "8 hour" -u +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "GFWLIST_DOMAINS_URL=https://cokebar.github.io/gfwlist2dnsmasq/gfwlist_domain.txt" >> $GITHUB_ENV
          echo "GFWLIST_EXTRAS_DOMAINS_URL=https://raw.githubusercontent.com/pexcn/gfwlist-extras/master/gfwlist-extras.txt" >> $GITHUB_ENV
          echo "GREATFIRE_DOMAINS_URL=https://raw.githubusercontent.com/Loyalsoldier/cn-blocked-domain/release/domains.txt" >> $GITHUB_ENV
          echo "REJECT_DOMAINS_URL=https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt" >> $GITHUB_ENV
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Checkout the "master" branch
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Checkout the "release" branch
        uses: actions/checkout@v2
        with:
          ref: release
          path: old

      - name: Get and add proxy domains into temp-proxy.txt file
        run: |
          curl -sSL $GFWLIST_DOMAINS_URL | perl -ne '/^((?=^.{3,255})[a-zA-Z0-9][-_a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-_a-zA-Z0-9]{0,62})+)/ && print "$1\n"' > temp-proxy.txt
          curl -sSL $GFWLIST_EXTRAS_DOMAINS_URL | perl -ne 'print if not /^(#|\s)/' >> temp-proxy.txt
          curl -sSL $GREATFIRE_DOMAINS_URL | perl -ne '/^((?=^.{3,255})[a-zA-Z0-9][-_a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-_a-zA-Z0-9]{0,62})+)/ && print "$1\n"' >> temp-proxy.txt
          cat myproxylist.txt >> temp-proxy.txt
          sort -u temp-proxy.txt -o temp-proxy.txt
          sed -i -e '/cdn-apple\.com$/d' -e '/^\(.*\.\)\?apple\.com$/d' -e '/\.cn$/d' -e '/^\(.*\.\)\?ntp\./d' temp-proxy.txt
          sed '/[a-zA-Z0-9-]\+\(\.[a-zA-Z0-9-]\+\)\{2,\}/d' temp-proxy.txt > temp-proxy1.txt
          for n in `seq $(sed -n '$=' temp-proxy1.txt)`; do
            domain=$(awk "NR==$n {print; exit}" temp-proxy1.txt)
            sed -i "/.*\.$domain$/d" temp-proxy.txt
          done
          sed -i '/^$/d' temp-proxy.txt

      - name: Get and add reject domains into temp-reject.txt file
        run: |
          curl -sSL $REJECT_DOMAINS_URL > temp-reject
          diff ./reject-need-to-remove.txt ./temp-reject | awk '/^>/{print $2}' > temp-reject.txt
          cat reject-need-to-add.txt >> temp-reject.txt
          sed -i -e '/regex:/d' -e '/^$/d' temp-reject.txt
          sort -u temp-reject.txt -o temp-reject.txt

      - name: Generate proxylist.conf
        run: |
          echo "#Proxy List" > ./old/proxylist.conf
          cat temp-proxy.txt | while read line; do
            echo "domain-rules /$line/ -address #6 -nameserver foreign -ipset proxylist -speed-check-mode none" >> ./old/proxylist.conf
          done

      - name: Generate blocklist.conf
        run: |
          sed -e 's!\(.*\)!address /\1/#!' -e "1i#Block List" temp-reject.txt > ./old/blocklist.conf

      - name: Move and zip files and generate sha256 hash
        run: |
          cd ./old
          sha256sum blocklist.conf > blocklist.conf.sha256sum
          sha256sum proxylist.conf > proxylist.conf.sha256sum

      - name: Release and upload assets
        uses: softprops/action-gh-release@v1
        if: env.PUSH_TO_RELEASE == 'true'
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./old/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd ./old
          sed -i '/url =/d' ./.git/config
          git config --local user.name "actions"
          git config --local user.email "action@github.com"
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git remote set-url --add origin "https://${{ secrets.GITEE_ACCOUNT }}:${{ secrets.GITEE_PASSWORD }}@gitee.com/${{ secrets.GITEE_NAME }}/hosts.git"
          git remote set-url --add origin "https://${{ secrets.CODING_ACCOUNT }}:${{ secrets.CODING_PASSWORD }}@e.coding.net/${{ secrets.CODING_NAME }}/hosts.git"
          git push -u origin release
